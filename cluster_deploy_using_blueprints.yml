- name: Check if a cluster single-node-hdp-cluster already exists
  uri:
    url: "http://master.subex.com:8080/api/v1/clusters/single-node-hdp-cluster"
    method: GET
    force_basic_auth: yes
    user: "admin"
    password: "admin"
    headers: '{"X-Requested-By":"ambari"}'
    status_code: 200,201,202,404
  register: cluster_check

  - name: Fail if a cluster single-node-hdp-cluster already exists
  fail:
    msg: Cluster single-node-hdp-cluster already exists!
  when: cluster_check.status != 404
  
  - name: Delete any existing blueprint called single-node-hdp-cluster_bp
  uri:
    url: "http://master.subex.com:8080/api/v1/blueprints/single-node-hdp-cluster_bp"
    method: DELETE
    force_basic_auth: yes
    user: "admin"
    password: "admin"
    headers: '{"X-Requested-By":"ambari"}'
    status_code: 200,201,202,404
    return_content: no
  when: cluster_check.status == 404
  
  - name: Upload the blueprint single-node-hdp-cluster_bp to the Ambari server
  uri:
    url: "http://master.subex.com:8080/api/v1/blueprints/single-node-hdp-cluster_bp"
    method: POST
    force_basic_auth: yes
    user: "admin"
    password: "admin"
    headers: '{"X-Requested-By":"ambari"}'
    body: "cluster_configuration.json"
    body_format: raw
    status_code: 200,201,202,409
    timeout: 60
    return_content: no
	
	- name: Launch the create cluster request
  uri:
    url: http://master.subex.com:8080/api/v1/clusters/single-node-hdp-cluster
    method: POST
    force_basic_auth: yes
    user: "admin"
    password: "admin"
    headers: '{"X-Requested-By":"ambari"}'
    body: "cluster_configuration.json"
    body_format: raw
    status_code: 200,201,202
    timeout: 120
    return_content: yes
  register: cluster_create_task
	
	
	- name: Wait for the cluster to be built
  uri:
    url: "{{ (cluster_create_task.content|from_json).href }}"
    force_basic_auth: yes
    user: "admin"
    password: "admin"
    headers: '{"X-Requested-By":"ambari", "Content-Type":"application/json"}'
    status_code: 200,201,202
    return_content: yes
  register: cluster_check_task
  until: (((cluster_check_task.content|from_json).Requests.request_status == 'COMPLETED' and 			(cluster_check_task.content|from_json).Requests.completed_task_count|int > 0) or
   (cluster_check_task.content|from_json).Requests.request_status == 'FAILED' or
         (cluster_check_task.content|from_json).Requests.request_status == 'TIMEDOUT' or
         (cluster_check_task.content|from_json).Requests.request_status == 'ABORTED')
  retries: "{{ wait_timeout // 10 }}"
  delay: 10
  when: wait and cluster_create_task is defined and cluster_create_task

- name: Fail if the cluster create task is in an error state
  fail:
    msg: "Failed to build the single-node-hdp-cluster cluster. Task Status is {{ (cluster_check_task.content|from_json).Requests.request_status }}."
  when: wait and ((cluster_check_task.content|from_json).Requests.request_status == 'FAILED' or
         (cluster_check_task.content|from_json).Requests.request_status == 'TIMEDOUT' or
         (cluster_check_task.content|from_json).Requests.request_status == 'ABORTED')